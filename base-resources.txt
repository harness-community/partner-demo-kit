compute - video uses mbp m1
  vs code with markdown preview plugin (Markdown All in One)
  git --version
  this repo (partner-demo-kit)
  docker -version
  minikube version
    minikube addons enable metrics-server
    prometheus
      cd into kit such that ./prometheus.yml exists
      kubectl create namespace monitoring
      kubectl -n monitoring apply -f ./prometheus.yml
  helm version
  terraform -version
docker hub account and registry
  create a docker hub account if you don't have one
  create repository in your docker hub account named harness-demo
  get pat (account settings > personal access tokens)
  build and push backend-latest
    cd into backend such that ./Dockerfile exists
    docker build -t edslatt/harness-demo:backend-latest .
    docker push edslatt/harness-demo:backend-latest
harness account - video uses fresh harness account against a fresh gmail to ensure representative experience
  turn on CI and CD
  install delegate at account level
    couple of helm commands described in the harness ui
  get account id
  get pat
  create project Base Demo (gets you slug Base_Demo)
  terraform
    preparation
      cd into kit such that ./main.tf exists
      update se-parms.tfvars with your values
      set env var DEMO_BASE_PAT
    commands
      terraform init
      terraform plan -var="pat=$DEMO_BASE_PAT" -var-file="se-parms.tfvars" -out=plan.tfplan 
      terraform apply -auto-approve plan.tfplan
    to reset
      harness
        remove the repo partner_demo_kit from harness using the harness ui > code repo module > manage repository, delete
        remove the project Base Demo using the harness ui
      minikube
        use kubectl commands to remove frontend and backend deployments and services
    covers
      connector k8s
      connector docker
      connector prometheus
      secret docker password
      secret docker username
      template compile application
      environment dev
      environment prod
      infrastructure k8s dev
      service backend
      monitored service backend_dev
      monitored service frontend_dev
  manual
    set repo to scan code
      harness ui > code repo module > manage repositor > security, set secret scanning to on and save
    two monitored services

harness elements created during the demo
  pipeline
  service frontend